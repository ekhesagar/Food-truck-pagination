{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sagar/Documents/Food-Truck-Pagination-main/src/Components/Pagination/Pagination.js\";\nimport React from \"react\";\nimport './Pagination.css';\n\nconst PaginationTest = ({\n  postsPerPage,\n  totalPosts,\n  paginate,\n  currentPage\n}) => {\n  // Add Pagination pages\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horz-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: currentPage === 1 ? 'disabled' : 'red',\n            onClick: () => paginate(currentPage - 1),\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 18\n          }, this), pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: currentPage === number ? 'active' : '',\n            onClick: () => paginate(number),\n            children: number\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 18\n          }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: currentPage === Math.ceil(totalPosts / postsPerPage) ? 'disabled' : 'green',\n            onClick: () => paginate(currentPage + 1),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n\n_c = PaginationTest;\nexport default PaginationTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationTest\");","map":{"version":3,"sources":["/Users/sagar/Documents/Food-Truck-Pagination-main/src/Components/Pagination/Pagination.js"],"names":["React","PaginationTest","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","map","number"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,YADsB;AAEtBC,EAAAA,UAFsB;AAGtBC,EAAAA,QAHsB;AAItBC,EAAAA;AAJsB,CAAD,KAKjB;AACJ;AACA,QAAMC,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGD,YAAvB,CAArB,EAA2DK,CAAC,EAA5D,EAAgE;AAC9DD,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AACD,sBACA;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAA,kCACG;AAAI,YAAA,SAAS,EAAEF,WAAW,KAAK,CAAhB,GAAoB,UAApB,GAAiC,KAAhD;AACI,YAAA,OAAO,EAAE,MAAMD,QAAQ,CAACC,WAAW,GAAG,CAAf,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,EAMKC,WAAW,CAACK,GAAZ,CAAiBC,MAAD,iBAClB;AACI,YAAA,SAAS,EAAEP,WAAW,KAAKO,MAAhB,GAAyB,QAAzB,GAAoC,EADnD;AAEI,YAAA,OAAO,EAAE,MAAMR,QAAQ,CAACQ,MAAD,CAF3B;AAAA,sBAGQA;AAHR,aAASA,MAAT;AAAA;AAAA;AAAA;AAAA,kBADE,CANL,eAcG;AACA,YAAA,SAAS,EAAEP,WAAW,KAAKG,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGD,YAAvB,CAAhB,GAAuD,UAAvD,GAAoE,OAD/E;AAEA,YAAA,OAAO,EAAE,MAAME,QAAQ,CAACC,WAAW,GAAG,CAAf,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AA4BD,CAvCD;;KAAMJ,c;AAyCN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport './Pagination.css';\r\n\r\nconst PaginationTest = ({\r\n  postsPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n}) => {\r\n  // Add Pagination pages\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n  <div>\r\n      <div className='content'>\r\n          <div className='horz-list'>\r\n              <ul>               \r\n                 <li className={currentPage === 1 ? 'disabled' : 'red'}\r\n                     onClick={() => paginate(currentPage - 1)}>\r\n                   Previous\r\n                 </li>\r\n\r\n                  {pageNumbers.map((number) => (\r\n                 <li key={number}\r\n                     className={currentPage === number ? 'active' : ''}\r\n                     onClick={() => paginate(number)}>\r\n                        {number}            \r\n                 </li>\r\n                  ))}\r\n\r\n                 <li \r\n                 className={currentPage === Math.ceil(totalPosts / postsPerPage) ? 'disabled' : 'green'} \r\n                 onClick={() => paginate(currentPage + 1)} >\r\n                   Next\r\n                 </li>             \r\n              </ul>\r\n           </div>       \r\n        </div>\r\n   </div>\r\n  );\r\n};\r\n\r\nexport default PaginationTest;\r\n"]},"metadata":{},"sourceType":"module"}