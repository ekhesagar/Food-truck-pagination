{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sagar/Documents/Food-Truck-Pagination-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Components\n\nimport List from './Components/List/List';\nimport Pagination from './Components/Pagination/Pagination'; // Styles\n\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [posts, setPost] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  useEffect(() => {\n    const Data = async () => {\n      // Get the data from API when component initially mounts\n      const result = await axios('http://data.sfgov.org/resource/bbb8-hzi6.json');\n      let item = result.data; // Add zero's to the hours\n\n      const addZero = i => {\n        if (i < 10) {\n          i = \"0\" + i;\n        }\n\n        return i;\n      }; // filter data according to the time\n\n\n      const date = new Date();\n      var h = addZero(date.getHours());\n      var m = addZero(date.getMinutes());\n      var j = h + \":\" + m;\n      const filteredItems = item.filter(item => item.start24 < j && item.end24 > j && item.dayorder === date.getDay().toString()); // Sort the data Alphabetically\n\n      const sortItems = filteredItems.sort((a, b) => {\n        var textA = a.applicant.toUpperCase();\n        var textB = b.applicant.toUpperCase();\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\n      });\n      setPost(sortItems);\n    };\n\n    Data();\n  }, []); // Pagination Logic to find index\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // Setting Page index\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hotel-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"hotel-text\",\n      children: \"Food Trucks Open In San Francisco\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      pageOfItems: currentPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"uRK8dyOeDBM9IlmSxZU+tf4PWuo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sagar/Documents/Food-Truck-Pagination-main/src/App.js"],"names":["React","useState","useEffect","axios","List","Pagination","App","posts","setPost","currentPage","setCurrentPage","postsPerPage","Data","result","item","data","addZero","i","date","Date","h","getHours","m","getMinutes","j","filteredItems","filter","start24","end24","dayorder","getDay","toString","sortItems","sort","a","b","textA","applicant","toUpperCase","textB","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\n// Components\nimport List from './Components/List/List'\nimport Pagination from './Components/Pagination/Pagination'\n// Styles\nimport './App.css';\n\nconst App =()=>{\n\nconst [posts, setPost] = useState([])\nconst [currentPage, setCurrentPage] = useState(1);\nconst [postsPerPage] = useState(10);\n\nuseEffect(()=>{\nconst Data = async ()=>{\n  // Get the data from API when component initially mounts\nconst result = await axios('http://data.sfgov.org/resource/bbb8-hzi6.json')\nlet item = result.data;\n\n// Add zero's to the hours\nconst addZero=(i)=> {\n  if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n  }\n\n// filter data according to the time\nconst date = new Date();\nvar h = addZero(date.getHours());\nvar m = addZero(date.getMinutes());\nvar j = h + \":\" + m;\nconst filteredItems=item.filter(item=>\n      item.start24<j && \n      item.end24>j && \n      item.dayorder===date.getDay().toString() \n      )\n    \n// Sort the data Alphabetically\nconst sortItems= filteredItems.sort((a,b)=>{\n  var textA = a.applicant.toUpperCase();\n  var textB = b.applicant.toUpperCase();\n      return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n    })\n    setPost(sortItems)\n  }\n Data()\n},[])\n\n// Pagination Logic to find index\nconst indexOfLastPost = currentPage * postsPerPage;\nconst indexOfFirstPost = indexOfLastPost - postsPerPage;\nconst currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n// Setting Page index\nconst paginate = (pageNumber) => setCurrentPage(pageNumber);\n\nreturn(\n  <div className='hotel-app'>\n     <h1 className='hotel-text'>Food Trucks Open In San Francisco</h1>\n        <List pageOfItems={currentPosts}/>       \n        <Pagination \n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n        currentPage={currentPage}\n        />\n  </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}